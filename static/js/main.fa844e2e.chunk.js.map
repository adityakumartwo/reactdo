{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","t","onClick","toggleMode","role","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","alert","word","lower","charAt","slice","capatalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.fa844e2e.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                </li> */}\r\n                \r\n            \r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n              <div className={`form-check form-switch text${props.mode==='white' ? 'dark' : 'white'}`}t>\r\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n              </div>\r\n            </div>\r\n        </div>\r\n        </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes =  {title : PropTypes.string.isRequired,\r\n                    aboutText:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'this is title',\r\n    aboutText: 'About'\r\n  };","import React,{useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"UpperCase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to upperCase\", \"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"UpperCase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"converted to lowerCase\", \"success\");\r\n    }\r\n    const handleOnClear=()=>{\r\n        let newText = \" \";\r\n        setText(newText);\r\n        props.showAlert(\"Text cleared\", \"success\");\r\n\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"Onchange\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy to clipboard\", \"success\");\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Remove ExtraSpaces\", \"success\");\r\n    }\r\n    const [text,setText] = useState('');\r\n    // text = \"new text\" // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n  return (\r\n      <>\r\n    <div className=\"container\" style={{color:props.mode==='dark' ? 'white' : '#00143c'}}> \r\n        <h2>{props.heading}</h2>        \r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value = {text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark' ? 'grey' : 'white', color:props.mode==='dark' ? 'white' : '#00143c'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleOnClear}>Clear Text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove extra spaces</button>\r\n    </div>\r\n    <div className=\"container my-2\" style={{color:props.mode==='dark' ? 'white' : '#00143c'}}>\r\n        <h1>Your Text Summary</h1>\r\n        <p>{text.split(\" \").length} word, {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>.0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction alert(props) {\r\n    const capatalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capatalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            \r\n     </div>\r\n  )\r\n}\r\n\r\nexport default alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" /> */}\n    {/* <Navbar/> */}\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <TextForm heading=\"Enter the text to analyze below\" mode={mode}/> */}\n    {/* <Switch> */}\n    {/* /users --> Component 1\n        /users/home --> Component 2 */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route> */}\n    {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}